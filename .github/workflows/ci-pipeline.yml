name: Cross-platform CI

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  build-linux:
    name: Build on Linux
    # For initial testing use GitHub-hosted runner:
    runs-on: ubuntu-latest
    # When you have registered self-hosted runners, switch to:
    # runs-on: [self-hosted, linux-build]
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
    - name: Build sample image
      run: |
        docker build \
          --build-arg BUILD_ID=${{ github.run_id }} \
          -t myorg/sample-app:ci-${{ github.run_id }} \
          ./exercises/02-containerize-app/app
          

- name: Upload linux artifact
  uses: actions/upload-artifact@v4
  with:
    name: linux-app-source
    path: ./exercises/02-containerize-app/app

  build-windows:
    name: Build on Windows
    # For initial testing use GitHub-hosted runner:
    runs-on: windows-latest
    # When you have registered self-hosted Windows runners, switch to:
    # runs-on: [self-hosted, windows-build]
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4

      - name: Windows build placeholder
        shell: pwsh
        run: |
          Write-Host "Windows build step (placeholder)"
          New-Item -ItemType Directory -Force -Path .\artifacts\windows
          Set-Content -Path .\artifacts\windows\placeholder.txt -Value "windows artifact placeholder â€” $env:GITHUB_RUN_ID"

      - name: Upload windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifact
          path: ./artifacts/windows

  publish:
    name: Publish
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Publish placeholder
        run: echo "Publish step (push to GHCR / Docker Hub or create release)"
